name: CI Helm Auto Deploy Env of Workstation CRM

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_TAG: "int"
  TARGET_IMAGE_TAG: "int"
  TARGET_STACK: openresty_php
  IMAGE_NAME: webimpetus
  TARGET_ENV: int
  minReplicas: ${{ secrets.minReplicas_test }}
  IMAGE_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  KUBECTL_CMD_FILE_EXEC_STR: "chmod +x /usr/local/bin/bootstrap-openresty.sh"
  KUBECTL_CMD_FILE_RUN_STR: "/usr/local/bin/bootstrap-openresty.sh"
  TARGET_CLUSTER: "k3s2"
  
jobs:
    build:
        runs-on: 'ubuntu-latest'
        steps:
    
        - name: Checkout this repo
          uses: actions/checkout@v3
    
        - name: short-sha
          uses: benjlevesque/short-sha@v1.2
          with:
            length: 6
    
        - run: echo $SHA
          env:
           SHA: ${{ steps.short-sha.outputs.sha }}
    
        - run: echo $SHA
          env:
           SHA: ${{ env.SHA }}
    
        - name: Build WebImpetus Docker image based on the TARGET PLATFORM Image and push to Docker Hub
          run: |
            echo "WebImpetus Docker image builder!"
            echo "Build, tag, and push image to the given Docker Registry."
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWD }}
            docker build -f $(pwd)/devops/docker/Dockerfile --build-arg TAG=latest -t wsl-${{ env.TARGET_STACK }} . --no-cache
            docker tag wsl-${{ env.TARGET_STACK }} ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TARGET_IMAGE_TAG }}
            docker push ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TARGET_IMAGE_TAG }}
          shell: bash
    
    deployment:
        runs-on: 'node2'
        needs: build

        steps:
            - name: Checkout this repo
              uses: actions/checkout@v3
        
            - name: Deploy WebImpetus to k3s2 VPN Internal Network Cluster
              run: chmod +x ./deploy-to-kubernetes.sh && ./deploy-to-kubernetes.sh "int" "k3s2" "int"
                
            - name: Slack Notification for Workstation CRM release 
              uses: rtCamp/action-slack-notify@v2
              env:
                SLACK_CHANNEL: general
                SLACK_COLOR: ${{ job.status }}
                SLACK_ICON: https://github.com/rtCamp.png?size=48
                SLACK_MESSAGE: 'Post Content :rocket:'
                SLACK_TITLE: Post Title
                SLACK_USERNAME: rtCamp
                SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

