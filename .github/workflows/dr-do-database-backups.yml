name: Webimpetus Disaster Recovery Management Docker Image

on:
  push:
    branches: [ aws ]
  workflow_dispatch:

env:
  IMAGE_TAG: "test"
  TARGET_IMAGE_TAG: "test"
  TARGET_STACK: openresty_php
  IMAGE_NAME: webimpetus-dr
  TARGET_ENV: test
  IMAGE_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  
jobs:
  deployment:
    runs-on: 'ubuntu-latest'
    steps:

    - name: Checkout this repo
      uses: actions/checkout@v3

    - name: Build Webimpetus Disaster Recovery Management Docker Image based on the TARGET PLATFORM Image and push to Docker Hub
      run: |
        echo "Webimpetus Disaster Recovery Management Docker Image builder!"
        echo "Build, tag, and push image to the given Docker Registry."
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWD }}
        docker build -f $(pwd)/devops/docker/Dockerfile-dr --build-arg TAG=latest -t wsl-${{ env.TARGET_STACK }} . --no-cache
        docker tag wsl-${{ env.TARGET_STACK }} ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TARGET_IMAGE_TAG }}
        docker push ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TARGET_IMAGE_TAG }}
      shell: bash

    - name: Slack Notification for Workstation Disaster Recovery 
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: general
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'The Backup has been made :rocket:'
        SLACK_TITLE: Workstation Disaster Recovery
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
