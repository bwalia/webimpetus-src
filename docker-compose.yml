version: '3.3'

services:
  #1 - Run the mariadb database
  webimpetus-db:
    container_name: "webimpetus-db"
    image: mariadb:11.2.2
    restart: always
    environment:
      MYSQL_DATABASE: 'myworkstation_dev'
      MYSQL_USER: 'wsl_dev'
      MYSQL_PASSWORD: 'CHANGE_ME'
      MYSQL_ROOT_PASSWORD: 'CHANGE_ME_DEFINITELY'
    ports:
      - '3309:3306'
    expose:
      - '3309'
    volumes:
      - ./wi-dev.sql:/docker-entrypoint-initdb.d/myworkstation_dev_db.sql
    networks: 
    - webimpetus-network

  #2 - Run the mariadb database adminer access
  adminer:
    container_name: "webimpetus-admin"
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: webimpetus-db
    restart: always
    ports:
      - 5502:8080
    networks:
      - webimpetus-network

  #3 - Run the webimpetus app
  webimpetus:
      container_name: "webimpetus-dev"
      build:
        context: .
      restart: always
      links:
          - "webimpetus-db"
      volumes:
      - ./ci4:/var/www/html
      - ./devops:/var/www/html/devops
      - .env:/var/www/html/.env
      networks:
        webimpetus-network:
          ipv4_address: 172.178.0.8

      depends_on: 
      - webimpetus-db # This service depends on mysql. Start that first.
      ports:
        - "5500:80"
      environment:
        CI_ENVIRONMENT: 'development'
        app.baseURL: 'http://localhost:5500/'

# Add Keycloak service
  keycloak:
    container_name: keycloak
    build:
      context: .
      dockerfile: Dockerfile.keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_BIND_ADDRESS: 0.0.0.0
      KC_HOSTNAME: 0.0.0.0
      # KEYCLOAK_IMPORT: /opt/keycloak/import/realm-config.json
    ports:
      - "3010:8080"
    depends_on:
      - webimpetus-db
    volumes:
      - ./devops/keycloak_data:/opt/keycloak/data
    networks:
      webimpetus-network:
          ipv4_address: 172.178.0.11
  #4 - Run the cypress e2e smoke tests
  # e2e:
  #   # image: cypress/included:12.8.1
  #   build:
  #     context: .
  #     dockerfile: ./cypress/Dockerfile-cypress
  #   container_name: webimpetus-cypress
  #   depends_on:
  #    - webimpetus
  #   links:
  #       - "webimpetus"
  #   # note: inside e2e container, the network allows accessing
  #   # "webapp" host under name "webapp"
  #   # so "curl http://webapp" would return whatever the webserver
  #   # in the "webapp" container is cooking
  #   # see https://docs.docker.com/compose/networking/
  #   environment:
  #     - CYPRESS_baseUrl=http://webimpetus:80
  #   command: pwd && ls -la && npm install && npx cypress run && sleep 60
  #   # npx cypress run
  #   # mount the host directory e2e/cypress and the file e2e/cypress.config.js as
  #   # volumes within the container
  #   # this means that:
  #   #  1. anything that Cypress writes to these folders (e.g., screenshots,
  #   #     videos) appears also on the Docker host's filesystem
  #   #  2. any change that the developer applies to Cypress files on the host
  #   #     machine immediately takes effect within the e2e container (no docker
  #   #     rebuild required).
  #   networks:
  #     - webimpetus-network
  #   volumes:
  #     - ./cypress:/cypress


networks:
  webimpetus-network:
    ipam:
      config:
        - subnet: 172.178.0.0/16
                        # Names our volume
volumes:
  webimpetus-db-vol:
  webimpetus-src-vol: